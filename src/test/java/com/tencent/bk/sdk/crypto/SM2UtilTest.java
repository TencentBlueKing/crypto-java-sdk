/*
 * Tencent is pleased to support the open source community by making 蓝鲸加解密Java SDK（crypto-java-sdk） available.
 *
 * Copyright (C) 2021 THL A29 Limited, a Tencent company.  All rights reserved.
 *
 * 蓝鲸加解密Java SDK（crypto-java-sdk） is licensed under the MIT License.
 *
 * License for 蓝鲸加解密Java SDK（crypto-java-sdk）:
 * --------------------------------------------------------------------
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
 * documentation files (the "Software"), to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and
 * to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of
 * the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO
 * THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.tencent.bk.sdk.crypto;

import com.tencent.bk.sdk.crypto.exception.SM2DecryptException;
import com.tencent.bk.sdk.crypto.exception.SM2EncryptException;
import com.tencent.bk.sdk.crypto.util.SM2Util;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

import java.nio.charset.StandardCharsets;
import java.security.KeyPair;
import java.security.PrivateKey;
import java.security.PublicKey;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

class SM2UtilTest {

    private static PrivateKey privateKey = null;
    private static PublicKey publicKey = null;

    private static final byte[] EMPTY_MESSAGE = "".getBytes(StandardCharsets.UTF_8);

    private static final byte[] MESSAGE = "abcdefg中文".getBytes(StandardCharsets.UTF_8);


    @BeforeAll
    static void setup() {
        KeyPair keyPair = SM2Util.genKeyPair();
        privateKey = keyPair.getPrivate();
        publicKey = keyPair.getPublic();
    }

    @Test
    void testEncryptAndDecrypt() {
        // 空值用例
        // key不为空，message为空
        assertThrows(SM2EncryptException.class, () -> SM2Util.encrypt(publicKey.getEncoded(), EMPTY_MESSAGE));
        assertThrows(SM2DecryptException.class, () -> SM2Util.decrypt(privateKey.getEncoded(), EMPTY_MESSAGE));

        // 使用JDK通用接口PublicKey、PrivateKey加解密
        // 一般用例：加密
        byte[] realCipheredMessage = SM2Util.encrypt(publicKey, MESSAGE);
        // 一般用例：解密
        byte[] normalMessage = SM2Util.decrypt(privateKey, realCipheredMessage);
        assertArrayEquals(normalMessage, MESSAGE);

        // 使用编码为字节数组后的PublicKey、PrivateKey加解密
        // 一般用例：加密
        realCipheredMessage = SM2Util.encrypt(publicKey.getEncoded(), MESSAGE);
        // 一般用例：解密
        normalMessage = SM2Util.decrypt(privateKey.getEncoded(), realCipheredMessage);
        assertArrayEquals(normalMessage, MESSAGE);
    }

}
